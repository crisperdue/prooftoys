/** Add css rules here for your application. */

h1 {
  font-size: 2em;
  font-weight: bold;
  margin: 1em 0px .2em;
  text-align: center;
}

h2 {
  font-size: 1.5em;
  font-weight: bold;
  margin: .4em 0px 1em;
}

h2, h3 {
  margin-bottom: .5em;
}

h4 {
  display: run-in;
}

h4:after {
  content: '. ';
}

body {
  margin: 1em 3em 1em 1em;
  text-align: left;
  font-family: sans-serif;
}

p {
  margin: 1em 0px;
  /*
   * Allow extra space for math formatting such as subscripts.
   * The plain number is inherited as-is, where a percentage or
   * em value, etc. is inherited as computed in the parent.
   */
  line-height: 1.4;
}

.italic {
  font-style: italic;
}

/* Makes an element display like a hyperlink. */
.link {
  color: #55F;
  cursor: pointer;
}

/* Prevents these from making the overall line less tall. */
sub, super {
  line-height: 0px;
}

table {
  border-collapse: separate;
  empty-cells: show;
}

/* Source code (tty) style */
code {
  color: #860;
  white-space: nowrap;
  font-size: 110%;
}

/* Text wrapping */
.nowrap {
  white-space: nowrap;
}

.wrap {
  white-space: wrap;
}

/* Math-oriented text */
span.math, span.mathColor, s {
  font-family: STIXGeneral, Times, serif;
  /* Variable and constant names should be explicitly italicized
     within math text. */
  font-style: normal;
  white-space: nowrap;
}

/* Math text in documents */
span.mathColor, s {
  color: #860;
}

.ellipsis {
  color: gray;
}

/**
 * Truth tables for binary operators
 */

table.binaryTruthTable {
  border-collapse: collapse;
  margin-bottom: 1.5em;
}

table.binaryTruthTable td.truthy, table.binaryTruthTable td.falsy {
  padding: 2px 10px;
  border: 2px solid silver;
}

/* This needs to be less specific than a rule for class cellHighlight. */
td.falsy {
}

table.binaryTruthTable th {
  font-weight: normal;
  text-align: center;
  padding: 2px 10px;
}

/* This needs to take precedency over backgrounds for "falsy" cells. */
table.binaryTruthTable td.cellHighlight, .cellHighlight {
  background-color: #fcc;
}

.thHighlight {
  background-color: #fcc;
}

table.binaryTruthTable td.truthy:after {
  content: "true";
}

table.binaryTruthTable td.falsy:after {
  content: "false";
}


/* Just below the main heading */
div#slogans {
  margin-bottom: 1em;
  text-align: center;
  font-style: italic;
}

/* Contains the left navigation */
td#leftNav {
  vertical-align: top;
  padding-top: 7em;
  width: 15em;
}

td#leftNav a {
  display: block;
  font-style: italic;
  margin: .3em 1.5em .3em 1em;
  text-decoration: none;
  text-indent: -1em;
}

/* Left nav items */
td#leftNav a:before {
  content: "‚ä¶ ";
}

/* Text in a shaded box */
.explanation {
  margin: .3em;
  border: 4px solid silver; /* #ccf; */
  padding: 0em 1em;
  background-color: #e8e8ff;
}

/* Text in an unshaded box */
.boxed {
  margin: .3em;
  border: 4px solid silver;
  padding: .2em 1em;
}

/* Not displayed */
.hidden {
  display: none;
}

/* Invisibly fills space */
.invisible {
  visibility: hidden;
}

/* Proof displays -- proof.js */

/* Header line and comments for display. */
.proofHeader {
    margin: 1em 1.5em .5em;
    line-height: 120%;
}

/* Display of the proof itself */
table.proofDisplay {
    margin: .2em 0em;
    padding: 1px;
    /* Right margin does not affect the right edge, use padding. */
    padding-right: 2em;
    width: 100%;
}

/* Display of a subproof */
.inferenceDisplay {
  margin-left: 1em;
}

.stepsParent {
  /* Position the step details overlay relative to this. */
  position: relative;
}

/*
 * Container for all the proof steps.  Slightly darker background
 * than the individual steps.
 */
.proofSteps {
  /*
     The touch screen tap highlighting is confusing, so prevent it.
  */
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  /* white-space: nowrap could go here to turn off text wrapping. */
}

/* The outermost element of a step */
.proofStep {
    clear: both;
    background-color: white;
    font-family: STIXGeneral, times, serif;
    /* Each proofStep has a 1px border, which is gray when
       the step is selected in the UI or hovered.
       */
    border: 1px solid transparent;
    /* Padding causes the proofStep to have screen space
       outside its children, which causes flashing as
       the mouse enters and leaves those areas.
       */
    /* If needed to avoid undesired text selection:
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    */
}

/* Color is overridden by hovering on the step or selecting it. */
.stepNumArea {
  border: 1px solid transparent;
}

.proofDisplay.editable .proofStep.hover .stepNumArea {
  border: 1px solid #aaa;
}

/* Step deleter control, only visible when the step is hovered. */
.proofStep .deleteStep {
  visibility: hidden;
  height: 60%;
}

.proofStep.hover .deleteStep {
  visibility: visible;
  color: red;
  font-weight: bold;
}

.proofStep.hover.hasUsers .deleteStep {
  visibility: visible;
  color: silver;
}

/* Rule name and information about rule arguments. */
.proofStep .stepInfo {
    margin-left: .6em;
    color: #777;
}

.proofStep .stepNumber {
  /* Like stepInfo */
  color: #777;
}


/* Highlighting of parts of proof steps */

.proofStep.dep .stepNumArea {
  background-color: lime;
 }

/* The "site" class requests display of the expr as a
   "site" input of a proof step.
 */
.proofStep .expr.site {
  background-color: lime;
}

/* Must be specific enough to override the silver/gray border. */
.proofDisplay.editable .proofStep.selected .stepNumArea {
  border: 1px solid black;
}

/* Old value ("removed"), occurrence of variable to be substituted. */
.proofStep .old, .proofStep .occur {
  color: #A0A0A0; /* Between silver and gray */
}

/* Scope of operation, e.g. function body to substitute into.
 * Lower priority than "new", so precedes it in the file.
 */
.proofStep .scope {
  background-color: #eee;
}

/* New value ("replacement") -- green */
.proofStep .new {
  background-color: lime;
}

/* References to a step number, where it is used as an input */
span.stepReference.referenced {
  border-color: #88F;
}

/* Rule name (or fact used for rewriting) */
span.ruleName {
  font-style: italic;
}

/* Expression in a proof step display, and step numbers */
.proofStep .expr, span.stepNumber, span.stepReference {
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
}

span.assumptions {
  color: #999;
  margin-right: .4em;
}

/* Step reference in assumptions */
span.stepRef {
  font-weight: bold;
}

/* When hovering over an expression */
.proofStep .fullExpr.hovered, .proofStep .expr.hovered {
  border-color: #aaf;
}

.proofStep .expr.selected {
  border-color: black;
}

/* Styling for constants T and F, sans-serif roman. */
.proofStep .expr .trueFalse {
  font-family: sans-serif;
  font-size: 90%;
}


/* Proof step editor */

/* Overrides styles for .proofDisplay. */
.stepEditor {
  background-color: white;
}

/* Make inputs a bit larger than regular text */
.stepEditor input {
  font-family: STIXGeneral, times;
  font-size: 90%;
}

.stepEditor select {
  font-size: 120%;
}

/* Text used as a hint, as in a text field */
.hinted {
  font-style: italic;
  font-size: 90%;
  color: #999;
}

/* Input for rule name */
input.sted-input {
  font-family: inherit;
  font-size: 100%;
  width: 80%;
}

/* Button to clear the current editor input form */
input.sted-clear {
  /* Lines it up better with the adjacent text */
  vertical-align: text-bottom;
}

/* Inputs for rule arguments */

/* input.string is currently just used for defined names */
input.term, input.string {
  font-style: italic;
  width: 30em;
}

input.varName, input.step, input.equation, input.implication {
  width: 4em;
}


/* Proof state display */

.proofStateDisplay {
    padding: 1em;
    border: 2px solid #aaf;
}

textarea.proofStateArea {
    width: 95%;
    margin: 1em 0em;
}
