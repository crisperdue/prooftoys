// Visit https://aka.ms/tsconfig to read more about this file

{
  "files": [
    "ts/global.d.ts",
    "ts/site.ts", 
    "ts/util.ts", 
    "ts/prelim.ts", 
    "ts/expr.ts",
    "ts/xutil.ts",
    "ts/engine.ts",
    "ts/unify.ts",
    "ts/logic.ts",
    "ts/numbers.ts",
    "ts/natnums.ts",
    "ts/step-editor.ts",
    "ts/rendering.ts",
    "ts/solution-status.ts",
    "ts/proof-data.js",
    // Put a tsconfig.json file in the tests/ dir for this one:
    // "tests/tests.js",
    // The following are present basically to be copied to js/ folder.
    "ts/boilerplate.ts",
    "ts/canvas.js",
    "ts/jquery.tableofcontents.js",
    "ts/logic-pix.js",
    // Obsolete or under development:
    // "ts/deeper-fields.js",
    // "ts/nn.js",
    // "ts/sample-proofs.js",
    // "ts/worker.js",
  ],

  "compilerOptions": {
    "allowJs": true,
    "checkJs": true,
    "target": "es2020",
    // See https://github.com/RyanCavanaugh/project-references-demo
    // Seems to need this whole library to be in a subfolder, e.g.
    // modifies effect of outDir if rootDir is not ".".
    // I.e. with "composite": true, outputs go to ts/js and ts/dts.
    // But now I cannot reproduce this! Syntax of relative pathnames??
    //
    "composite": true,
    //
    // Directory structure
    "rootDir": "ts",
    "declaration": true,
    "declarationDir": "dts",
    "outDir": "js",
    "lib": ["es2022", "dom", "dom.iterable"],
    "skipLibCheck": true,
    "module": "commonjs",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    
    /* Projects */
    // "incremental": true,
    // "composite": true,
    // "tsBuildInfoFile": "./.tsbuildinfo",
    // "disableSourceOfProjectReferenceRedirect": true,
    // "disableSolutionSearching": true,
    // "disableReferencedProjectLoad": true,
    
    /* Language and Environment */
    // "experimentalDecorators": true,
    // "emitDecoratorMetadata": true,
    // "noLib": true,
    // "useDefineForClassFields": true,
    // "moduleDetection": "auto",
    
    /* Modules */
    // "rootDir": "./",
    // "moduleResolution": "node10",
    // "baseUrl": "./",
    // "paths": {},
    // "rootDirs": [],
    // "typeRoots": [],
    // "types": [],
    // "allowUmdGlobalAccess": true,
    // "moduleSuffixes": [],
    // "allowImportingTsExtensions": true,
    // "resolvePackageJsonExports": true,
    // "resolvePackageJsonImports": true,
    // "customConditions": [],
    // "resolveJsonModule": true,
    // "allowArbitraryExtensions": true,
    // "noResolve": true,
    
    /* JavaScript Support */
    // "maxNodeModuleJsDepth": 1,
    
    /* Emit */
    // "declaration": true,
    // "declarationMap": true,
    // "emitDeclarationOnly": true,
    // "sourceMap": true,
    // "inlineSourceMap": true,
    // "outFile": "./",
    // "removeComments": true,
    // "noEmit": true,
    // "importHelpers": true,
    // "downlevelIteration": true,
    // "sourceRoot": "",
    // "mapRoot": "",
    // "inlineSources": true,
    // "emitBOM": true,
    // "newLine": "crlf",
    // "stripInternal": true,
    // "noEmitHelpers": true,
    // "noEmitOnError": true,
    // "preserveConstEnums": true,
    // "declarationDir": "./",
    
    /* Interop Constraints */
    // "isolatedModules": true,
    // "verbatimModuleSyntax": true,
    // "isolatedDeclarations": true,
    // "allowSyntheticDefaultImports": true,
    // "preserveSymlinks": true,
    
    /* Type Checking */
    // "strict": true,
    // "noImplicitAny": true,
    // "strictNullChecks": true,
    // "strictFunctionTypes": true,
    // "strictBindCallApply": true,
    // "strictPropertyInitialization": true,
    // "noImplicitThis": true,
    // "useUnknownInCatchVariables": true,
    // "alwaysStrict": true,
    // "noUnusedLocals": true,
    // "noUnusedParameters": true,
    // "exactOptionalPropertyTypes": true,
    // "noImplicitReturns": true,
    // "noFallthroughCasesInSwitch": true,
    // "noUncheckedIndexedAccess": true,
    // "noImplicitOverride": true,
    // "noPropertyAccessFromIndexSignature": true,
    // "allowUnusedLabels": true,
    // "allowUnreachableCode": true,
    
    /* Completeness */
    // "skipDefaultLibCheck": true,
  }
}
