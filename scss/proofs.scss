
.ellipsis {
  color: #aaa;
  margin: 0px 5px;
}

/* For rule menu descriptions */
.description {
  font-style: italic;
  color: gray;
}

/* Proof displays -- rendering.js */

.proofEditor {
    position: relative;
    line-height: 1.3;
    border: 2px solid #ddd;
    padding: 1em;
    border-radius: 8px;
    background-color: honeydew;
}

/* If an error in loading the proof editor, then show. */
.proofEditor .ifProofLoadError {
  display: none;
}
.proofEditor.proofLoadError .ifProofLoadError {
  display: block;
}

.proofEditor {
  input, button, select {
      /* font-size: .8rem;  */
      margin: 0 4px;
  }

  input[type=button], button {
      background-color: #ddf;
      border-width: 1px;
      border-radius: 6px;
      padding: 2px 8px 1px;
  }

  button.fa-copy {
      padding: 4px;
      margin-left: 0;
  }

  input.saveAs {
      padding: 4px;
      border: 1px solid gray;
  }
}

/* Header line and comments for display. */
.proofHeader {
  margin: 0em 0em .4em .5em;
  padding-top: .2em;
  line-height: 120%;
}

.proofDisplay {
    background-color: honeydew;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 1em;
    font-size: 1.1rem;
}

.proofDisplay .link {
    cursor: pointer;
}

/* Override some of the styles above within a ProofEditor */
.proofEditor .proofDisplay {
    border: none;
    border-radius: 0;
    padding: 0;
}

/* Indent most subproofs. */
.proofDisplay .inferenceDisplay {
  margin: 5px 5px 5px 5px;
  border: 1px solid silver;
  box-shadow: 2px 2px 2px #ddd;
}

/* When inside an inferenceDisplay include a bit of bottom border.
   (The inferenceDisplay has its own border.)
 */
.proofDisplay .inferenceDisplay .proofDisplay {
  border-bottom: 3px solid transparent;
}

.proofDisplay.editable {
    /* This allows room for display of a next-step suggestion. */
    margin-bottom: 1em;
    margin-top: 1em;
}

/* The first level of subproof needs extra indent in the case
 * where there is a "deleter" button on the left.
 */
.proofDisplay.editable .inferenceDisplay {
  margin-left: 3em;
}

/* Inner inferenceDisplay blocks indent less. */
.proofDisplay.editable .inferenceDisplay .inferenceDisplay {
  margin-left: 1em;
}

.stepsParent {
  /* Can support absolute positioning of children; currently unused. */
  position: relative;
}

/*
 * Container for all the proof steps.  Slightly darker background
 * than the individual steps.
 */
.proofSteps {
  /* Touch screen tap highlighting is confusing, so prevent it. */
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  /* white-space: nowrap could go here to turn off text wrapping. */
}

.inferenceDisplay .proofSteps {
  margin-bottom: 0px;
}

/* The outermost element of a step */
.proofStep {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    font-family: STIXGeneral, times, serif;
    /* Each proofStep has a 1px border, which is gray when
     * the step is selected in the UI or hovered.
     */
    border: 1px solid transparent;
    margin-left: 4em;
    margin-bottom: .3em;
}

/* Override the left margin just above to push the first child to the left. */
/* Any subsequent rows will be indented more. */
.proofStep .stepAndControls {
    margin-left: -4em;
}

.proofStep.stepSuggestion {
    position: absolute;
    left: 0;
    right: 0;
    color: #555;
    background-color: #fcfcfc;
    border: .5px solid #bbf;
    /* Try to help situations where this overlaps the menu. */
    z-index: 1;
    /* This node is transparent to mouse events. */
    pointer-events: none;
}

.proofStep.stepMessage {
    display: block;
    padding-left: 5em;
}

/* Use the inline-block *class* as needed to avoid contaminating inner
   inline-block elements with the text-indent above. */
.proofStep .inline-block {
  display: inline-block;
  text-indent: 0em;
}

/* Subproof controls */

/*
 * Upward-pointing triangles that indicate a subproof is available.
 * Visible when step is hovered.
 */
.subproofIndicator {
  visibility: hidden;
}

.proofStep.hover .subproofIndicator {
  visibility: visible;
}

/* Display of element that can hide a subproof */
.subproofHider {
  visibility: hidden;
  font-family: sans-serif;
  font-style: italic;
  color: blue;
  cursor: pointer;
  background-color: #eef;
  padding: 1px 6px;
  border: 1px solid #bbf;
  font-size: 90%;
}

/* If in a step with open subproof display or in a subproof, show it. */
.proofStep.hasSubproof .subproofHider, .proofHeader .subproofHider {
  visibility: visible;
}

/* Others */

/* Adjacent and similar to subproofHider */
.techDetailsButton {
  position: relative;
  font-family: sans-serif;
  font-style: italic;
  color: blue;
  cursor: pointer;
  background-color: #eef;
  padding: 1px 6px;
  border: 1px solid #bbf;
  font-size: 90%;
}

.techDetails {
  margin: 0em .5em;
  padding: 2px 5px;
  border: 1px solid #bbb;
  background-color: aliceblue;
}

/* Statistics displays */

/* Time and step count statistics for proof or step. */
span.ruleStats {
  font-family: Georgia;
  font-style: italic;
  color: gray;
}

/* Comment that you can select an expression or step. */
.advice {
    float: left;
    font-family: Georgia;
    font-style: italic;
    margin-left: 1em;
}

/* Hovering or selecting this will override the border color. */
.stepAndNum {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    cursor: default;
    border: 1px solid transparent;
}

/* Make the .expr child of stepAndNum automatically a flexbox. */
.stepAndNum > .expr {
    display: flex;
    align-items: center;
}

.stepAndControls {
    display: flex;
    align-items: center;
    min-width: 40%;
}

/* For basic layout with flexboxes. */
.flex {
    display: flex;
}

/* Flexboxes with centered children. */
.flexBox {
    display: flex;
    align-items: center;
}

/* Hovering the step number highlights the step and number,
 * indicating that the entire step can be selected.
 */
.proofDisplay.editable .proofStep .stepAndNum.hover {
  border-color: #ccc;
  box-shadow: 2px 2px 2px #ccc;
}

/* But no hover in a subproof display */
.proofDisplay.editable .inferenceDisplay .stepAndNum.hover {
  border-color: transparent;
  box-shadow: none;
}

/* The stepHoverMark area is active when the step is hovered
   or flagged as "assumed" (by hovering some step that assumes it).
 */
.proofStep .stepHoverMark {
    position: relative;
    visibility: hidden;
}

.proofStep.hover .stepHoverMark {
    color: #88f;
    visibility: visible;
}

.proofStep.assumed .stepHoverMark {
    color: #66a;
    visibility: visible;
}

/* When some step assumes it, the content is a circled small letter "a". */
.proofStep.assumed .stepHoverMark .fa::before {
    content: "\24d0";
}

/* fa-question-circle-o Unicode.  This takes priority over the
   circled small letter "a" by being below it in this file.
 */
.proofStep.hover .stepHoverMark .fa::before {
    content: "\f29c";
}

/* The box with info about progress toward solution(s)
 */
.solutionStatus {
    margin: .7em 0 .2em 0;
 }

.solutionStatusDisplay {
    display: inline-block;
    white-space: pre;
    margin: .2em;
    border: 2px solid #0cf;
    border-radius: 6px;
    padding: 3px .5em;
}

.solutionStatusDisplay:empty {
    visibility: hidden;
}

/* This displays information such as assumptions
   when the "stepHoverMark" area is hovered.
 */
.hoverInfoBox {
    /* Initially none. */
    display: none;
    position: absolute;
    z-index: 1;
    left: 1.7em;
    top: 1.3em;
    width: 600px;
    /* Override inherited value from proofStep */
    text-indent: 0;
    text-align: left;
    line-height: 1.2;
    color: black;
    background-color: ivory;
    opacity: .85;
    padding: 2px;
    padding-left: 10px;
    border: 1px solid silver;
    box-shadow: 2px 2px 2px #ccc;
}

/* Step deleter control, only visible when the step is hovered. */
.proofStep .deleteStep {
    color: #d9534f;
    background-color: white;
    padding: 0;
    border: none;
    margin: 0;
    visibility: hidden;
}

/* Checkbox that selects an entire step.  Visible when the
   step is hovered or selected. */
.proofStep .checkbox {
  visibility: hidden;
}

.proofDisplay.editable .proofStep.hover .deleteStep {
  visibility: visible;
}

.proofDisplay.editable .proofStep.hover .checkbox,
.proofStep.selected .checkbox {
  visibility: visible;
}

/* The noDeleter contains an indicator that the step is hovered. */
.proofStep .noDeleter {
  visibility: hidden;
}

.proofStep.hover .noDeleter {
  color: #aaa;
  visibility: visible;
}

/* The step has other steps that depend on it.
   In effect this is the disabled version of the button. */
.proofDisplay.editable .proofStep.hover.hasUsers .deleteStep {
  visibility: visible;
  background-color: white;
  color: silver;
}

/* Rule name and information about rule arguments. */
.proofStep .stepInfo {
    /* The 1em left margin is a compromise.  We would really like
     * to indent this whole display more when it flows down to a
     * new line, but flex layout does not support that.
     */
    margin: 0 auto 0 1em;
    white-space: nowrap;
    font-family: Roboto, sans-serif;
    font-size: 90%;
    color: #aaa;
}

/* Fact or term within a step description */
.proofStep .term {
    font-family: StixGeneral, times;
    /* Temporary until these terms have internal styling. */
    font-style: italic;
    color: #bbb;
}

.proofStep .stepNumber {
  /* Like stepInfo */
  color: #777;
}

.proofStep .stepNumArea {
    border: 1px solid transparent;
    margin-right: 5px;
    position: relative;
}

/* Expression in a proof step display, and step numbers */
/* The .fullExpr here would be .expr if we wanted to highlight
   all expr nodes. */
.proofStep .fullExpr, span.stepNumber, span.stepReference {
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
}

/* Highlighting of parts of proof steps */

/* Step number area of step used by hovered step */
.proofStep.dep .stepNumArea,
/* A "site" input of a proof step */
.proofStep .expr.site,
/* New value ("replacement expression") */
.proofStep .new {
  background-color: #afa;
  border-color: #0d0;
}

/* Must be specific enough to override the silver/gray border. */
.proofDisplay.editable .proofStep.selected .stepAndNum {
  border: 1px solid #888;
  box-shadow: 2px 2px 2px #888;
}

/* Old value ("removed"), occurrence of variable to be substituted. */
.proofStep .old, .proofStep .occur {
  color: #0d0; /* Text color is green here rather than background. */
}

/* Scope of operation, e.g. function body to substitute into.
 * Lower priority than "new", so precedes it in the file.
 */
.proofStep .scope {
  background-color: #eee;
}

/* References to a step number, where it is used as an input */
span.stepReference.referenced {
  border-color: #88F;
}

/* Rule name (or fact used for rewriting) */
span.ruleName.link {
    color: #88f;
}

/* To prevent clicks in rapid succession from highlighting text
   or activating a double click action. */
span.ruleName.link, .stepAndNum, 

/* This class prevents the user from selecting text. */
.noselect {
  /* Including browser-specific versions */
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: moz-none;
  -ms-user-select: none;
  user-select: none;
}

.expr {
  position: relative;
}

span.assumptions {
  color: #aaa;
  margin-left: .3em;
  margin-right: .1em;
}

/* Step reference in assumptions */
span.stepRef {
  font-family: sans-serif;
  font-size: 90%;
  font-weight: bold;
  /* Should be same as in span.assumptions */
  color: #aaa;
}

/* When hovering over an expression in an editable proof.
   See also .stepAndNum .hover.
 */
.expr.hover {
  border-color: #88f;
}

/* Highlight selected expressions; a bit over-specific
   to take precedence over the hover highlight. */
.proofDisplay.editable .proofStep .expr.selected {
  border-color: DarkGray;
  box-shadow: 2px 2px 2px #aaa;
}

/* Styling for special-case names */

/* Styling for constants T and F, sans-serif roman. */
.proofStep .expr .trueFalse {
  font-family: sans-serif;
  font-size: 90%;
}

.expr .logicAnd, .expr .logicOr {
    font-size: 80%;
    color: gray;
}

.expr.equiv {
    margin: 0 .3em;
}

.expr.multiply {
    margin: 0 .1em;
}

/* Proof step editor */

// Container for data entry forms for running inference rules
.ruleForm {
  left: -1em;
  top: -.5em;
  position: absolute;
  background-color: white;
  padding: 1em;
  border: 2px solid DarkSeaGreen;
  border-radius: 5px;
  z-index: 5;
}

// Container for error displays
.proofErrors {
    position: absolute;
    background-color: white;
    left: 50%;
    max-width: 80%;
    z-index: 9;
    transform: translateX(-50%);
  padding: 4px;
  border: 2px solid DarkSeaGreen;
  border-radius: 5px;
}

/* Make inputs a bit smaller than regular text */
.ruleForm input {
  font-family: STIXGeneral, times;
  font-size: 90%;
}


/* Other */

/* Text used as a hint, as in a text field */
.hinted {
  font-style: italic;
  font-size: 90%;
  color: #999;
}

/* Button to clear the current editor input form */
button.sted-clear {
    color: #d9534f;
    background-color: white;
    padding: 0;
    border: none;
}

/* Special rendering of info-circles used as tooltips */
.fa-info-circle.tooltip {
    color: blue;
    font-size: smaller;
    padding: 0 3px;
    vertical-align: super;
}

/* Tooltipster customization */
.tooltipster-sidetip.tooltipster-shadow .tooltipster-content {
	color: #00c;
}

/* Inputs for rule arguments */

/* input.string is currently just used for defined names */
input.term, input.string, input.bool {
  font-style: italic;
  width: 20em;
}

input.bool {
  font-style: italic;
  width: 30em;
}

input.varName, input.step, input.equation, input.implication {
  width: 4em;
}

/* Rule display mode controls */

.modeList {
    display: flex;
    background-color: hsl(120deg, 73%, 50%);
    /* The mode list contributes top, left, and right borders. */
    border: 1px solid #bbf;
    border-bottom-width: 0;
    border-radius: 5px 5px 0 0;
}

.modeList .mode {
    text-align: center;
    padding: .2em 2em 0 2em;
}

.modeList .mode:hover {
    background-color: hsl(120deg, 73%, 70%);
    cursor: default;
}

.modeList > div.selected {
    background-color: hsl(120deg, 73%, 85%);
}

/* Rules menu */

/* Main node for the rule selector, contains the rulesContainer. */
.ruleMenu {
    position: absolute;
    left: 1em;
    right: 1em;
    background: AliceBlue;
    opacity: .9;
    z-index: 2;
}

.ruleMenu.hidden {
    display: block;
    visibility: hidden;
    /* Same height as when displayed */
    height: 20em;
    /* An element can have this class yet still be visible as it */
    /* is fading out.  Generally it should not respond to pointer */
    /* events, but that has occurred with the rule menu and */
    /* mouse enter events. */
    pointer-events: none;
}

.ruleMenuTitle {
    font-family: StixGeneral, times, serif;
    font-weight: bold;
    padding: .2em .7em 0 .7em;
    /* The rule menu title contributes left and right borders, */
    border: 1px solid #bbf;
    border-width: 0 1px;
}

.ruleMenu .scrollingMenu {
    max-height: 20em;
    overflow-y: scroll;
    overflow-x: hidden;
    /* The scrolling part contributes bottom, left, and right borders. */
    border: 1px solid #bbf;
    border-top-width: 0;
    border-radius: 0 0 5px 5px;
    padding: 2px;
}

.proofPreview {
    position: absolute;
    left: .5em;
    right: .2em;
    padding: 1em;
    border: 1px solid silver;
    background-color: AliceBlue;
}

/* Rule selection items */

.ruleItem:hover {
  left: -1px;
  top: -1px;
  border: 1px solid #aaa;
  box-shadow: 1px 1px 1px #aaa;
  background-color: #fbfbf9;
}

.ruleItem, .ruleItem:active {
  position: relative;
  left: 0px;
  top: 0px;
  margin: 2px 1px;
  padding: 2px 4px;
  border: 1px solid #eee;
  cursor: pointer;
  box-shadow: none;
  font-family: StixGeneral, times, serif;
}

.ruleItem:active {
  background-color: #aaf;
  border-color: gray;
}

/* Worksheet-related controls */

/* Outermost of worksheet containers, without border or padding. */
.wksControlsOuter {
    z-index: 3;
    position: absolute;
    margin-top: 4px;
    left: 1em;
    right: 1em;
    background-color: AliceBlue;
}

/* Main sections of the worksheet controls are children of this. */
.wksControls {
    position: relative;
    padding: 0em .5em 1em;
    border: 1px solid #aaf;
    box-shadow: 2px 2px 2px #ccc;
}

.wksControls .previewButton {
    float: right;
}

.wksInputs > div {
    margin-top: 1em;
}

.wksControlsOuter .openersArea,
.wksControlsOuter .deletersArea {
    position: absolute;
    background-color: AliceBlue;
    left: 1em;
    right: 1em;
    padding: 0 1em;
    border: 1px solid #aaf;
    max-height: 15em;
    overflow-y: scroll;
    overflow-x: hidden;
}

.wksControlsOuter .docListTitle {
    font-weight: bold;
    margin-top: .7em;
    margin-bottom: .8em;
}

.wksControlsOuter .docList {
    vertical-align: top;
    padding: .5em;
}

.wksControlsOuter .docName {
    font-size: 90%;
    padding: 1px 5px;
    border: 2px solid skyblue;
    border-radius: 5px;
    cursor: default;
}

.wksControlsOuter .docName.hover {
    background-color: #eef /* or perhaps AliceBlue */;
}

.wksTitle {
    font-weight: bold;
    margin: .8em 0;
}

textarea.proofStateArea {
    width: 95%;
    margin-top: 1em;
}

.proofButtons {
    font-size: .9rem;
    margin-top: .5em;
    margin-bottom: .3em;
}

input.copyText {
    text-align: right;
    text-overflow: ellipsis;
}

/** NEW **/

.proofEditor {

    // The entire rules menu (hidden state)
    .ruleMenu {
        visibility: hidden;
        opacity: 0;
        transition: all 1s linear;
        transition-delay: .5s;
    }

    &:hover .ruleMenu {
        visibility: visible;
        opacity: 1;
        transition: all .3s linear;
    }

    .ruleMenu:hover {
        visibility: visible;

        .solutionStatus {
            visibility: hidden;
            opacity: 0;
            transition: all .3s linear;
        }
        .proofButtons {
            visibility: hidden;
            opacity: 0;
            transition: all .3s linear;
        }
    }

    // Waiting for the prover to complete also dims
    // the rule menu entries, just for consistent appearance.
    &.ruleFormVisible .ruleMenu, &.waitingForProver {
        opacity: .5;
        transition: all .3s linear;
    }

    &.proofErrorsVisible .proofErrors {
        visibility: visible;
        opacity: 1;
        transition: all .2s linear;
    }

    // Hide the solution status (progress) display when it
    // is empty or the mouse pointer is in the ruleMenu area
    // and may generate step suggestions.
    .solutionStatus {
        opacity: 1;
        visibility: visible;
    }

    .solutionStatus.empty {
        visibility: hidden;
    }

    &.ruleMenuHovered .solutionStatus {
        opacity: 0;
        visibility: hidden;
    }

}
