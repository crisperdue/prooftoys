

// Styling for overlays -- covers entire viewport
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: rgba(0,0,0,0.3);
  z-index: 1000;
}

// Modal dialog z-index, just above the overlay
.modal {
  z-index: 1001; /* 1 more than the overlay layer */
}

.faded {
  color: #999;
}

.ellipsis {
  color: #aaa;
  margin: 0px 5px;
}

/* For rule menu item descriptions */
.description {
  font-style: italic;
  color: #777;
}

// For video tooltips:
a[videotip] {
  font-weight: bold;
}

b[videotip], b[imagetip] {
  border: 1px solid black;
  padding: 0 2px;
}

// Unwanted assumption in goal-based proof.
// See also .redBack in pt.scss.
.expr.unsolved {
  font-weight: bold;
  color: crimson;
  background-color: hsl(30, 100%, 90%);
  border-radius: 5px;
  // Use these for even more emphasis:
  // background-color: hsl(340 100% 95%);
  // text-decoration: solid underline red;
  // text-decoration-thickness: 2px;
}

.expr.hover, .expr.hover .unsolved, .inShadow {
  background-color: hsl(200deg, 100%, 90%);
  // border-radius: 5px;  Maybe?
}

wffblock- {
  display: inline-block;
}

wffblock- > * {
  vertical-align: top;
}

// This animation and the noticeInsert class work together
// to fire an element's oninsert (function) property, a function
// of no arguments that receives the element as this.
// It fires on insertion of the element into the DOM, directly
// or by insertion of any ancestor.  This apparently will
// only fire when the element becomes "visible".  Associated
// JS code is in util.js.  Reference:
// http://www.backalleycoder.com/2012/04/25/i-want-a-damnodeinserted/

// outline-color is just an arbitrary animatable property,
// and this particular animation is claimed to do nothing.
@keyframes nodeInserted {  
  from {  
    outline-color: initial; 
  } to {
    outline-color: initial;
  } 
}

.noticeInsert {
  animation-name: nodeInserted;
  animation-duration: 0.01s;
}

/* Proof displays -- rendering.js */

.proofEditor {
    color: black;
    position: relative;
    line-height: 1.5;
    border: 2px solid #aaa;
    padding: 1em;
    border-radius: 12px;
    background-color: hsl(200deg, 100%, 93%);
    margin-bottom: 1.5em;
    // Alternate border and shadow:
    border: 1px solid #aaa;
    box-shadow: #aaa 1px 1px 2px;
    // overflow-anchor: none;  Can this tame unwanted scrolling?
}

// This causes all pointer events in the proof editor
// to appear to come from the proof editor itself, which
// makes it easy to identify and ignore them if needed.
.proofEditor.hasDialog > * {
  pointer-events: none;
}

/* If an error in loading the proof editor, then show. */
.proofEditor .ifProofLoadError {
  display: none;
}
.proofEditor.proofLoadError .ifProofLoadError {
  display: block;
}

.proofEditor {

  .proofEditorHeader {
    color: black;
  }

  // Exercises may have a wff, styled as a formula.
  .proofEditorHeader .wff {
    font-family: StixGeneral, times;
  }

  .proofEditorHeader .clearWork {
    float: right;
    margin-left: 1em;
    font-weight: bold;
  }

  .proofEditorHeader .solved {
    float: right;
    margin-left: 1em;
    font-weight: bold;
    font-size: 1.1em;
    color: #00a000;
    position: relative;
    // Animate this value to get attention.
    // right: 5em;
    // This is the same as .proofEditor
    background-color: hsl(200deg, 100%, 97%);
  }

  input, button, select {
      /* font-size: .8rem;  */
      margin: 0 4px;
  }

  input[type=button], button {
      background-color: #ddf;
      border-width: 1px;
      border-radius: 6px;
      padding: 2px 8px 1px;
  }

  button.fa-copy {
      padding: 4px;
      margin-left: 0;
  }

  input.saveAs {
      padding: 4px;
      border: 1px solid gray;
  }
}

/* Header line and comments for display. */
.proofHeader {
  margin: 0em 0em .4em .5em;
  padding-top: .2em;
  line-height: 120%;
}

.proofDisplay {
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 1em;
    font-size: 1.1rem;
    clear: both;

    // No border and less padding for nested proofDisplays.
    .proofDisplay {
      border: none;
      padding: .5em;
      padding-left: 1em;
    }
}

/* Override some of the styles above within a ProofEditor */
.proofEditor .proofDisplay {
    border: none;
    border-radius: 0;
    padding: 0;
}

/* Indent most subproofs. */
.proofDisplay .inferenceDisplay {
  margin: 5px 5px 5px 5px;
  border: 1px solid silver;
  box-shadow: 2px 2px 2px #ddd;
}

/* When inside an inferenceDisplay include a bit of bottom border.
   (The inferenceDisplay has its own border.)
 */
.proofDisplay .inferenceDisplay .proofDisplay {
  border-bottom: 3px solid transparent;
}

.inferenceDisplay .proofStep {
  padding-left: .5em;
}

.proofDisplay.editable {
    // The step suggestion is positioned from this.
    position: relative;
    /* This allows room for display of a next-step suggestion. */
    margin-bottom: 1em;
    margin-top: 1em;
}

/* The first level of subproof needs extra indent in the case
 * where there is a "deleter" button on the left.
 */
.proofDisplay.editable .inferenceDisplay {
  margin-left: 3em;
}

/* Inner inferenceDisplay blocks indent less. */
.proofDisplay.editable .inferenceDisplay .inferenceDisplay {
  margin-left: 1em;
}

// Notice that this rule requires .proofSteps immediately under
// .proofDisplay, i.e. top-level of proof steps.
.proofDisplay.editable > .proofSteps {
  min-height: 100px;
  height: 250px;
  position: relative; // This makes it an offsetParent.
  // Note that "resize: both" does not resize the
  // containing element horizontally.
  resize: vertical;   
  overflow-x: clip;
  overflow-y: auto;
  padding-top: 3px;
  padding-left: 3px;
  color: #0b0d0e;
  background-color: white;
  border: 1px solid #ddd;
  box-shadow: inset lightgray 2px 2px 2px;
}

/*
 * Container for all the proof steps.  Slightly darker background
 * than the individual steps.
 */
.proofSteps {
  position: relative;
  /* Touch screen tap highlighting is confusing, so prevent it. */
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  /* white-space: nowrap could go here to turn off text wrapping. */
}

.inferenceDisplay .proofSteps {
  margin-bottom: 0px;
}

/* The outermost element of a step */
.proofStep {
  font-family: STIXGeneral, times, serif;
  border: 1px solid transparent;
  margin-bottom: 1em;
  user-select: none;
}

.proofStep:last-child {
  margin-bottom: 0;
}

// Override the left margin just above to bring the stepAndNum back to the left.
// If the stepInfo flows down to another row, it will be indented.
.proofStep .stepAndControls {
  white-space: pre;
}

.proofStep.stepSuggestion {
    position: absolute;
    left: 0;
    right: 0;
    color: #555;
    background-color: #fcfcfc;
    border: .5px solid #bbf;
    /* Try to help situations where this overlaps the menu. */
    z-index: 1;
    /* This node is transparent to mouse events. */
    pointer-events: none;
}

.proofStep.stepMessage {
    display: block;
    padding-left: 5em;
}

/* Use the inline-block *class* as needed to avoid contaminating inner
   inline-block elements with the text-indent above. */
.proofStep .inline-block {
  display: inline-block;
  text-indent: 0em;
}

/* Subproof controls */

/*
 * Upward-pointing triangles that indicate a subproof is available.
 * Visible when step is hovered.
 */
.subproofIndicator {
  visibility: hidden;
}

.proofStep.hover .subproofIndicator {
  visibility: visible;
}

/* Display of element that can hide a subproof */
.subproofHider {
  visibility: hidden;
  font-family: sans-serif;
  font-style: italic;
  color: blue;
  cursor: pointer;
  background-color: #eef;
  padding: 1px 6px;
  border: 1px solid #bbf;
  font-size: 90%;
}

/* If in a step with open subproof display or in a subproof, show it. */
.proofStep.hasSubproof .subproofHider, .proofHeader .subproofHider {
  visibility: visible;
}

/* Others */

/* Adjacent and similar to subproofHider */
.techDetailsButton {
  position: relative;
  font-family: sans-serif;
  font-style: italic;
  color: blue;
  cursor: pointer;
  background-color: #eef;
  padding: 1px 6px;
  border: 1px solid #bbf;
  font-size: 90%;
}

.techDetails {
  margin: 0em .5em;
  padding: 2px 5px;
  border: 1px solid #bbb;
  background-color: aliceblue;
}

/* Statistics displays */

/* Time and step count statistics for proof or step. */
span.ruleStats {
  font-family: Georgia;
  font-style: italic;
  color: gray;
}

/* Comment that you can select an expression or step. */
.advice {
    float: left;
    font-family: Georgia;
    font-style: italic;
    margin-left: 1em;
}

/* Hovering or selecting this will override the border color. */
.stepAndNum {
  display: inline-block;
    cursor: default;
    border: 1px solid transparent;
}

.stepAndNum > * {
  vertical-align: top;
}

.stepAndControls {
    min-width: 40%;
}

/* For basic layout with flexboxes. */
.flex {
    display: flex;
}

/* Flexboxes with centered children. */
.flexBox {
    display: flex;
    align-items: center;
}

/* Hovering the step number highlights the step and number,
 * indicating that the entire step can be selected.
 */
.proofDisplay.editable .proofStep .stepAndNum.hover {
  border-color: #ccc;
  box-shadow: 2px 2px 2px #ccc;
}

/* But no hover in a subproof display */
.proofDisplay.editable .inferenceDisplay .stepAndNum.hover {
  border-color: transparent;
  box-shadow: none;
}

/* The stepHoverMark area is active when the step is hovered
   or flagged as "assumed" (by hovering some step that assumes it).
 */
.proofStep .stepHoverMark {
    position: relative;
    visibility: hidden;
}

.proofStep.hover .stepHoverMark {
    color: #88f;
    visibility: visible;
}

.proofStep.assumed .stepHoverMark {
    color: #66a;
    visibility: visible;
}

/* When some step assumes it, the content is a circled small letter "a". */
.proofStep.assumed .stepHoverMark .fa::before {
    content: "\24d0";
}

/* fa-question-circle-o Unicode.  This takes priority over the
   circled small letter "a" by being below it in this file.
 */
.proofStep.hover .stepHoverMark .fa::before {
    content: "\f29c";
}

/* The box with info about progress toward solution(s)
 */
.solutionStatus {
    margin: .7em 0 .2em 0;
 }

.solutionStatusDisplay {
    display: inline-block;
    white-space: pre;
    margin: .2em;
    border: 2px solid #0cf;
    border-radius: 6px;
    padding: 3px .5em;
}

.solutionStatusDisplay:empty {
    visibility: hidden;
}

/* This displays information such as assumptions
   when the "stepHoverMark" area is hovered.
 */
.hoverInfoBox {
    /* Initially none. */
    // display: none;
    position: absolute;
    z-index: 1;
    left: 1.7em;
    top: 1.3em;
    width: 600px;
    /* Override inherited value from proofStep */
    text-indent: 0;
    text-align: left;
    line-height: 1.2;
    color: black;
    background-color: ivory;
    opacity: .85;
    padding: 2px;
    padding-left: 10px;
    border: 1px solid silver;
    box-shadow: 2px 2px 2px #ccc;
}

/* Step deleter control, only visible when the step is hovered. */
.proofStep .deleteStep {
    color: #f44;
    background-color: white;
    padding: 0;
    border: none;
    margin: 0;
    visibility: hidden;
}

/* Checkbox that selects an entire step.  Visible when the
   step is hovered or selected. */
.proofStep .checkbox {
  visibility: hidden;
}

.proofDisplay.editable .proofStep.hover .deleteStep {
  visibility: visible;
}

.proofDisplay.editable .proofStep.hover .checkbox,
.proofStep.selected .checkbox {
  visibility: visible;
}

/* The noDeleter contains an indicator that the step is hovered. */
.proofStep .noDeleter {
  visibility: hidden;
}

.proofStep.hover .noDeleter {
  color: #aaa;
  visibility: visible;
}

/* The step has other steps that depend on it.
   In effect this is the disabled version of the button. */
.proofDisplay.editable .proofStep.hover.hasUsers .deleteStep {
  visibility: visible;
  background-color: white;
  color: silver;
}

/* Rule name and information about rule arguments. */
.proofStep .stepInfo {
  display: block;
    white-space: normal;
    // For both editor and plain display, the left margins are
    // approximate.  For more accurate indentation, move the
    // stepInfo inside the wffBlock.
    margin-left: 3em;
    font-family: "Roboto Flex", sans-serif;
    font-size: 85%;
    color: #777;
}

// If editable, increase the margin since the controls are on the left.
.proofDisplay.editable .proofStep .stepInfo {
  margin-left: 6em;
}

// The extra margin applies only to top-level proof steps.
.proofDisplay.editable .inferenceDisplay .proofStep .stepInfo {
  margin-left: 3em;
}

/* Fact or term within a step description */
.proofStep .term {
    font-family: StixGeneral, times;
}

.proofStep .stepNumArea {
  vertical-align: top;
    border: 1px solid transparent;
    margin-right: 5px;
    position: relative;
}

/* Expression in a proof step display, and step numbers */
/* The .fullExpr here would be .expr if we wanted to highlight
   all expr nodes. */
span.stepNumber, span.stepReference {
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
}

/* Highlighting of parts of proof steps */

/* The "site" and "new" clases are transient,
   so they override "unsolved". */
/* Step number area of step used by hovered step */
.proofStep.dep .stepNumArea,
/* A "site" input of a proof step */
.proofStep .expr.site, .proofStep .expr.site .unsolved,
/* New value ("replacement expression") */
.proofStep .new, .proofStep .new .unsolved {
  background-color: #afa;
  border-color: #0d0;
}

/* Must be specific enough to override the silver/gray border. */
.proofDisplay.editable .proofStep.selected .stepAndNum {
  border: 1px solid #888;
  box-shadow: 2px 2px 2px #888;
}

/* Old value ("removed"), occurrence of variable to be substituted. */
.proofStep .old, .proofStep .occur {
  color: #0d0; /* Text color is green here rather than background. */
}

/* Scope of operation, e.g. function body to substitute into.
 * Lower priority than "new", so follows it in the file.
 */
.proofStep .scope {
  background-color: #eee;
}

/* References to a step number, where it is used as an input */
span.stepReference.referenced {
  border-color: #88F;
}

/* Indicator to click to expand step details */
.subproofExpander {
    color: #66f;
    // Increase the horizontal size to make it a bigger target.
    padding: 0 8px;
    cursor: pointer;
}

/* To prevent clicks in rapid succession from highlighting text
   or activating a double click action. */
.subproofExpander, .noselect {
  /* Including Safari-specific versions */
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

span.assumptions {
  color: #aaa;
  margin-left: .3em;
  margin-right: .1em;
}

/* Step reference in assumptions */
span.stepRef {
  font-family: sans-serif;
  font-size: 90%;
  font-weight: bold;
  /* Should be same as in span.assumptions */
  color: #aaa;
}

/* Highlight selected expressions; a bit over-specific
   to take precedence over the hover highlight. */
.proofDisplay.editable .proofStep .expr.selected,
.proofDisplay.editable .proofStep .expr.selected .unsolved {
  background-color: hsl(200, 100%, 80%);
  border-radius: 5px;
}

/* Styling for special-case names */

/* Styling for constants T and F, sans-serif roman. */
.proofStep .expr .trueFalse {
  font-family: sans-serif;
  font-size: 90%;
}

.expr .logicAnd, .expr .logicOr {
    font-size: 70%;
    color: #555;
}

.expr.equiv {
    margin: 0 .1em;
}

.expr.implies {
  margin: 0 .1em;
}

// Text transforms, e.g. for \u27f9 arrows.
// Width of the element is not affected by the scaling,
// so we compensate with negative margins.
//
// .expr.ximplies {
//   display: inline-block;    // Necessary for transforms
//   transform-origin: center;
//   transform: scaleX(75%);
//   margin: 0 -.15em;
// }

.expr.multiply {
    margin: 0 .1em;
}

/* Proof step editor */

// Container for data entry forms for running inference rules
.ruleForm {
  left: -1em;
  top: -.5em;
  position: absolute;
  background-color: white;
  padding: 1em;
  border: 2px solid DarkSeaGreen;
  border-radius: 5px;
  z-index: 5;
}

// Container for error displays
.proofEditor .proofErrors {
  position: absolute;
  background-color: white;
  left: 50%;
  max-width: 80%;
  z-index: 9;
  transform: translateX(-50%);
  padding: 4px;
  border: 2px solid DarkSeaGreen;
  border-radius: 5px;
  pointer-events: auto;
}

// This is intended as a more general replacement
// for proofErrors styling.  Uses flex to center.
.dialogWrapper {
  position:relative;
  width: 100%;
  display: flex;
  justify-content: center;
}

// Supports flex items within the dialog.
// Also ensures that pointer-events work.
.dialogWrapper .dialog {
  position: absolute;
  display: flex;
  background-color: white;
  z-index: 8;
  padding: 4px;
  border: 2px solid DarkSeaGreen;
  border-radius: 5px;
  pointer-events: auto;
}

.buttonYes, .buttonNo {
  font-weight: bold;
  padding: 0 1em;
  margin: 0 .3em;
}

.buttonYes {
  color: green;
}

.buttonNo {
  color: crimson;
}

/* Make inputs a bit smaller than regular text */
.ruleForm input {
  font-family: STIXGeneral, times;
  font-size: 90%;
}


/* Other */

/* Text used as a hint, as in a text field */
.hinted {
  font-style: italic;
  font-size: 90%;
  color: #999;
}

/* Button to clear the current editor input form */
button.sted-clear {
    color: #d9534f;
    background-color: white;
    padding: 0;
    border: none;
}

/* Special rendering of info-circles used as tooltips */
.fa-info-circle.tooltip {
    color: blue;
    font-size: smaller;
    padding: 0 3px;
    vertical-align: super;
}

/* Tooltipster customization */
.tooltipster-sidetip.tooltipster-shadow .tooltipster-content {
	color: #00c;
}

/* Inputs for rule arguments */

/* input.string is currently just used for defined names */
input.term, input.string, input.bool {
  font-style: italic;
  width: 20em;
}

input.bool {
  font-style: italic;
  width: 30em;
}

input.varName, input.step, input.equation, input.implication {
  width: 4em;
}

/* Rule display mode controls */

.modeList {
    display: flex;
    flex-flow: wrap;  // Let the items wrap on very narrow displays.
    background-color: hsl(120deg, 73%, 50%);
    /* The mode list contributes top, left, and right borders. */
    border: 1px solid #bbf;
    border-bottom-width: 0;
    border-radius: 5px 5px 0 0;

    .mode {
        text-align: center;
        padding: .5em 2em;
        font-weight: 500;
    }

    .mode:hover {
        background-color: hsl(120deg, 73%, 70%);
        cursor: default;
    }

    .mode.selected {
        background-color: hsl(120deg, 73%, 85%);
    }
}

/* Rules menu */

/* Worksheet-related controls */

// If the document is preassigned, hide the worksheets button.
.proofEditor.oneDoc .wksButton {
  display: none;
}

/* Outermost of worksheet containers, without border or padding. */
.wksControlsOuter {
    z-index: 3;
    position: absolute;
    margin-top: 4px;
    left: 1em;
    right: 1em;
    background-color: AliceBlue;
}

/* Main sections of the worksheet controls are children of this. */
.wksControls {
    position: relative;
    padding: 0em .5em 1em;
    border: 1px solid #aaf;
    box-shadow: 2px 2px 2px #ccc;
}

.wksControls .previewButton {
    float: right;
}

.wksInputs > div {
    margin-top: 1em;
}

.wksControlsOuter .openersArea,
.wksControlsOuter .deletersArea {
    position: absolute;
    background-color: AliceBlue;
    left: 1em;
    right: 1em;
    padding: 0 1em;
    border: 1px solid #aaf;
    max-height: 15em;
    overflow-y: scroll;
    overflow-x: hidden;
}

.wksControlsOuter .docListTitle {
    font-weight: bold;
    margin-top: .7em;
    margin-bottom: .8em;
}

.wksControlsOuter .docList {
    vertical-align: top;
    padding: .5em;
}

.wksControlsOuter .docName {
    font-size: 90%;
    padding: 1px 5px;
    border: 2px solid skyblue;
    border-radius: 5px;
    cursor: default;
}

.wksControlsOuter .docName.hover {
    background-color: #eef /* or perhaps AliceBlue */;
}

.wksTitle {
    font-weight: bold;
    margin: .8em 0;
}

// .wksTitle is hidden if oneDoc.
.proofEditor.oneDoc .wksTitle {
  display: none;
}

.proofPreview {
    position: absolute;
    left: .5em;
    right: .2em;
    padding: 1em;
    border: 1px solid silver;
    background-color: AliceBlue;
}

textarea.proofStateArea {
    width: 95%;
    margin-top: 1em;
}

.proofButtons {
    font-size: .9rem;
    margin-top: .5em;
    margin-bottom: .3em;
}

input.copyText {
    text-align: right;
    text-overflow: ellipsis;
}

/** Rule Menu **/

.proofEditor {

    // The entire rules menu (hidden state)
    .ruleMenu {
        position: absolute;
        z-index: 2;
        left: 1em;
        right: 1em;
        color: black;
        background-color: hsl(200deg, 100%, 95%);
        visibility: hidden;
        opacity: 0;
        transition: all .4s linear;
        transition-delay: .3s;
    }

    &:hover .ruleMenu {
        visibility: visible;
        opacity: .9;
        transition: all .3s linear;
    }

    .ruleMenuTitle {
        font-family: StixGeneral, times, serif;
        font-weight: bold;
        background: hsl(120deg, 73%, 85%);
        padding: .2em .7em 0 .7em;
        /* The rule menu title contributes left and right borders, */
        border: 1px solid #ccf;
        border-top-width: 0;

        .star {
          font-weight: normal;
          white-space: nowrap;
        }
    }

    .ruleMenu .scrollingMenu {
        max-height: 20em;
        overflow-y: scroll;
        overflow-x: hidden;
        /* The scrolling part contributes bottom, left, and right borders. */
        border: 1px solid #bbf;
        border-top-width: 0;
        border-radius: 0 0 5px 5px;
        padding: 2px;
    }


    /* Rule selection items */

    .ruleItem:hover {
      left: -1px;
      top: -1px;
      border: 1px solid #aaa;
      box-shadow: 1px 1px 1px #aaa;
      background-color: #fbfbf9;
    }

    .ruleItem, .ruleItem:active {
      position: relative;
      left: 0px;
      top: 0px;
      padding: 2px 4px;
      border: 1px solid #eee;
      cursor: pointer;
      box-shadow: none;
      font-family: StixGeneral, times, serif;
    }

    .ruleItem:active {
      background-color: #aaf;
      border-color: gray;
    }

    // These are the styles for subgoal displays in rule items.
    .ruleItem subgoals {
      color: black;
      font-style: normal;
    }

    // Waiting for the prover to complete also dims
    // the rule menu entries, just for consistent appearance.
    &.ruleFormVisible .ruleMenu, &.waitingForProver {
        opacity: .5;
        transition: all .3s linear;
    }

    // Hide the solution status (progress) display when it
    // is empty or the mouse pointer is in the ruleMenu area
    // and may generate step suggestions.
    .solutionStatus {
        opacity: 1;
        visibility: visible;
    }

    .solutionStatus.empty {
        visibility: hidden;
    }

    &.ruleMenuHovered .solutionStatus {
        opacity: 0;
        visibility: hidden;
    }

}
