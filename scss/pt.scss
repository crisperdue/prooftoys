////
//// Styles for the Prooftoys web site, including proofs,
//// overriding the general site theme.
////

// Fonts: Now using Roboto Flex, a "variable" font that supports
//   many advanced typographic variations and effects with reduced
//   download size.
//
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400&family=Roboto+Flex:wght@300;400;500;700&display=swap');

// Icons
@import "https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.css";

// Tippy tooltip theme
@import "https://unpkg.com/tippy.js@6.3.7/themes/light-border.css";

/* To use Prooftoys styles throughout a document, give the HTML tag
   the logicZone class.  Proof editors automatically apply it, too.

   NOTE WELL that from here on, all styles are conditional on a parent
   element having the "logicZone" class.

   ALSO NOTE that this @import's proofs.css near the bottom, so its
   styles are implicitly within "logicZone" as well, and can override
   these.  Styles here and in proofs.scss do not import from
   Bootstrap CSS, though our (customized) style.scss uses Bootstrap
   extensively.
 */

.logicZone {

sub, sup {
  /* Browsers tend to size these for fractions, which makes */
  /* them a bit bigger than this. */
  // Google Chrome may override this with a user preference for
  // minimum font size.  Use of "zoom:" can force a smaller
  // size except in Firefox before version 126.
  font-size: 60%;
}

sub {
  // This assumes use of reboot.css, which positions them relative,
  // aligned to the baseline.  The negative bottom moves it below
  // that baseline, relative to its own size.
  bottom: -.3em;
}

.hidden {
  display: none;
}

.center {
    text-align: center;
}

.emphasis {
    font-family: Georgia;
    font-style: italic;
}

.italic {
  font-style: italic;
}

.nonItalic {
  font-style: normal;
}

figure {
  display: flex;
  justify-content: center;
}

img {
  border: 1px solid #ddd;
  box-shadow: #ccc 15px 10px 15px;
}

details > summary.block > :nth-child(1)::before {
  content: "▸ ";
}

details[open] > summary.block > :nth-child(1)::before {
  content: "▾ ";
}

/* Text wrapping */
.nowrap {
  white-space: nowrap;
}

.wrap {
  white-space: wrap;
}

.pre {
  white-space: pre;
}

.block {
  display: block;
}

.float {
    float: right;
}

// Font Awesome 120% size icon
.fa-120 {
  font-size: 1.2em;
  line-height: 0.75em;
  vertical-align: -15%;
}

dt {
  font-weight: normal;
}
dd {
  margin-left: 1.5em;
}

/**
 * Basic hamburger stylings really should include this bit
 * to override the usual button background.
 */
button.hamburger {
  background-color: transparent;
}

/* For tables of contents, overriding top and bottom margins. */
#TOC ul ul {
    margin: 0;
}


/**
 * Set the proof editor below the sidebar, but moved to the left to
 * give it a wider space to work in, for example in proofbuilder.md.
 */
.outdented {
  margin-top: 3em;
  margin-bottom: 5em;
}

/* On small displays there is no extra space to the left,
 * so don't outdent.
 */
// @include media-breakpoint-up(md) {
// This conditional is intended to select for "medium" width or greater.
@media (min-width: 768px) {
  .outdented {
    margin-left: -12em;
  }
}


/* For Talkyard */
div.talkyard-comments {
  background-color: white;
  opacity: .9;
}

/* Make the utterances Q & A stuff full width and */
/* make it lie above the sidebar, with a border. */
p.utterances {
    background-color: white;
    max-width: none;
    z-index: 1;
    opacity: .9;
    border-top: 1px solid gray;
}

/* Transitions */

/* This class with "hidden" provides a cheap way to animate appearance */
/* and disappearance. */
/* Customize with a specific max-height. */
.transHeight {
    max-height: 1000px;
    transition: max-height 0.25s ease-in;
    overflow: hidden;
}

/* Transitioning "height" would only work with explicit height value. */
.transHeight.hidden {
    max-height: 0;
    display: block;
    transition: max-height 0.25s ease-out;
}

/* Transition by fading.  The element always occupies space. */
/* Use jQuery.fadeToggle to get display: none. */
.transFade {
    visibility: visible;
    opacity: 1;
    /* Think of visibility ranging from 0 to 1, with all */
    /* nonzero values being visible. */
    transition: all .3s linear;
}

.transFade.hidden, .transFade.invisible, .transFade.ultraInvisible {
    visibility: hidden;
    opacity: 0;
    transition: all .3s linear;
    /* This overrides the meaning of hidden = display: none */
    display: block;
}


/* Font-Awesome */

/*
 * For uses of Font-Awesome, do not inherit any text-indent values, working
 * around a deficiency in its standard styles.  (Class fa displays as
 * inline-block.)
 */
.fa {
  text-indent: 0;
}


/* Overrides to the Whisper theme */

.content {

  /* Header styling */

  h1 {
    font-size: 2.6rem;
    font-weight: 500;
  }
  h2 {
    font-size: 2.1rem;
    font-weight: 400;
    margin-bottom: .3em;
  }
  h3 {
    font-size: 1.7rem;
    font-weight: 400;
  }
  h4 {
    font-size: 1.4rem;
    font-weight: 400;
  }
  h5 {
    font-size: 1.2rem;
    font-weight: 400;
  }
  h6 {
    font-size: 1.1rem;
    font-weight: 400;
  }

}

.docs-menu ul li {
  font-size: 1rem;
  font-family: "Georgia serif";
  font-style: italic;
}

/* Customize the styling of blockquotes. */

.content blockquote {
  margin-left: 1em;
}

/* Inline code blocks are for logic, so style accordingly. */
/* This also keeps less padding. */
/* TODO: This is somewhat delicate, find something better. */
.content code.language-logic {
    padding: 1px 3px;
    border-radius: 2px;
    font-family: STIXGeneral;
    font-size: 1em;
}

/* From style.scss in the Whisper theme, so it can override
   the preceding style. */
.content pre code {
    font-family: "Roboto Mono", monospace;
    font-size: 0.9rem;
}

/* For sidebar, see style.css */

/* Docs menu */

/* Indent levels of lists in the sidebar. */
/* Does not apply to the top-level UL. */
.docs-menu ul ul li {
    margin-left: 1em;
}

/* Page footer */

.pageFooter {
    /* The following let it work with an onresize action. */
    position: absolute;
    width: 100%;
    top: 0;
    visibility: hidden;
}

.pageFooterInner {
   text-align: center;
    background-color: #f5f3f1;
}

/* TOC */

/* Make TOC lists be closely packed. */
#TableOfContents ul {
    margin: 0;
}

/* Only display two levels of headings */
#TableOfContents ul ul ul {
    display: none;
}

/* Darken the color of links a bit. */
a {
    color: #1dc996;
}

/* Math-oriented text */

.math, .mathColor, s {
  font-family: STIXGeneral, Times, serif;
  /* Variable and constant names should be explicitly italicized
     within math text. */
  font-style: normal;
  white-space: nowrap;
}

/* You can use <s class=em> to make an em space. */
/* Character widths may vary by font. */
s.em {
    display: inline-block;
    min-width: 1em;
    min-height: 1em;
    vertical-align: text-bottom;
}

/* You can use <s class=em> to make an en space. */
/* Character widths may vary by font. */
s.en {
    display: inline-block;
    min-width: .5em;
    min-height: 1em;
    vertical-align: text-bottom;
}


/**
 * Truth tables for binary operators
 */

table.binaryTruthTable {
  border-collapse: collapse;
  margin-bottom: 1.5em;
  width: auto;
}

table.binaryTruthTable td.truthy, table.binaryTruthTable td.falsy {
  padding: 2px 10px;
  border: 2px solid silver;
}

/* This needs to be less specific than a rule for class cellHighlight. */
td.falsy {
}

table.binaryTruthTable th {
  font-weight: normal;
  text-align: center;
  vertical-align: middle;
  padding: 2px 10px;
  border: none;
}

/* This needs to take precedency over backgrounds for "falsy" cells. */
table.binaryTruthTable td.cellHighlight, .cellHighlight {
  background-color: #fcc;
}

.thHighlight {
  background-color: #fcc;
}

table.binaryTruthTable td.truthy:after {
  content: "true";
}

table.binaryTruthTable td.falsy:after {
  content: "false";
}


/* Blocks of text and logic formulas, used by shortcodes. */

/* If needed add a "zone" shortcode and rely on its class(es). */

.inset, .preBlock {
  display: block;
  background: #f5f5f5;
  border-left: 10px solid #ccc;
  margin: 1em 2em;
  padding: 0.5em 1em;
}

.preBlock {
  white-space: pre;
  line-height: 1.8;
}

/* Fade/unfade (for "hiding" problem solutions) */

div.canFade {
  position: relative;
}

div.canFade button.unfade {
  position: absolute;
  visibility: hidden;
  margin-top: 2em;
  margin-left: 5em;
  padding: 5px 10px;
  border-radius: 10px;
  font-family: Georgia;
}

div.canFade.faded button.unfade {
  visibility: visible;
}

div.canFade .fadeHere {
  opacity: 1;
  transition: opacity .5s ease;
  pointer-events: auto;
}

div.canFade.faded .fadeHere {
  opacity: 0.2;
  pointer-events: none;
}

// Like .expr.unsolved in proofs.scss.
.redBack {
  background-color: #ffe8e8;
}

@import "proofs.scss";

}
